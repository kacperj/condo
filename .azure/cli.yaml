parameters:
  name: condo
  env: {}
  secrets: {}

steps:
- checkout: self
  clean: true
  lfs: true
  persistCredentials: true

- script: |
    docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null || true
    docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null || true
    docker images -a | grep "test" | awk '{print $3}' | xargs docker rmi -f 2>/dev/null || true
  displayName: 'Docker cleanup'

- script: /usr/bin/condo --no-color --verbosity $CONDO_VERBOSITY -- /t:$CONDO_TARGET
  name: condo_execute
  displayName: execute condo
  env:
    CONDO_VERBOSITY: ${{ coalesce(variables['condo.verbosity'], 'normal') }}
    CONDO_TARGET: ${{ coalesce(variables['condo.target'], 'ci') }}
    ${{ insert }}: ${{ parameters.env }}
    ${{ if ne(variables['system.accesstoken'], '') }}:
      SYSTEM_ACCESSTOKEN: $(system.accesstoken)
    ${{ if ne(variables['docker.registry.password'], '') }}:
      DOCKER_REGISTERY_USERNAME: $(docker.registry.username)
    ${{ if ne(variables['docker.registry.password'], '') }}:
      DOCKER_REGISTERY_USERNAME_BASE64: $(docker.registry.username.base64)
    ${{ if ne(variables['docker.registry.password'], '') }}:
      DOCKER_REGISTRY_PASSWORD: $(docker.registry.password)
    ${{ if ne(variables['docker.registry.password.base64'], '') }}:
      DOCKER_REGISTRY_PASSWORD_BASE64: $(docker.registry.password.base64)
    ${{ if ne(variables['package.feed.username'], '') }}:
      PACKAGE_FEED_USERNAME: $(package.feed.username)
    ${{ if ne(variables['package.feed.password'], '') }}:
      PACKAGE_FEED_PASSWORD: $(package.feed.password)
    ${{ insert }}: ${{ parameters.secrets }}

- task: CopyFiles@2
  name: condo_copy_logs
  displayName: copy logs
  condition: and(always(), ne(variables['system.accesstoken'], ''))
  inputs:
    SourceFolder: artifacts
    Contents: |
      *.log
      *.rsp
    TargetFolder: '$(build.artifactstagingdirectory)/logs'
    CleanTargetFolder: true
    OverWrite: true

- task: CopyFiles@2
  name: condo_copy_tests
  displayName: copy tests
  condition: always()
  inputs:
    SourceFolder: artifacts/test
    Contents: |
      *.trx
      coverage.*
    TargetFolder: '$(build.artifactstagingdirectory)/tests'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  name: condo_push_logs
  displayName: publish logs
  condition: and(always(), ne(variables['system.accesstoken'], ''))
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/logs'
    ArtifactName: Logs

- task: PublishTestResults@2
  name: condo_push_tests
  displayName: publish test results
  condition: always()
  inputs:
    testRunner: VSTest
    testResultsFiles: '$(build.artifactstagingdirectory)/tests/*.trx'
    mergeTestResults: true

- task: PublishCodeCoverageResults@1
  name: condo_push_coverage
  displayName: publish code coverage results
  condition: and(always(), ne(variables['system.accesstoken'], ''))
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(build.artifactstagingdirectory)/tests/coverage.cobertura.xml'
